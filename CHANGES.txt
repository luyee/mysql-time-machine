Revision history for MySQL-Time-Machine

Release 0.11.0  Date/Time: 2016-09-12

    [NEW FEATURES]
    - Database recovery for binlog-flusher (Raynald Chung):
        - Added storing of table name mappings in local file for recovery purposes.
        - Added db-recovery script.
    
    [ENHANCEMENTS]
    - Kafka Applier performance improvement: now sending multiple rows
      per one Kafka message.
    - binlog-flusher robustness (Raynald Chung):
        - Any failed operation should be retried
        - Added the clean-up method, where all the connections to MySQL
          will be terminated so that MySQL won't keep anything running
          after the killing of the script.
    - Added support for pseudo GTID tracking and storing at safe checkpoints.
   

    [MINOR ENHANCEMENTS]
    - Added option to specify table filter regex in the config for Kafka
      Applier (Raynald Chung)
    - Added dryrun mode startup option. 
    - More consistency: schema history table name in hbase should have
      the same name as the hbase namespace that contains the tables
      from corresponding mysql schema.
    - added logging to binlog-flusher (Raynald Chung)
    - Requeue canceled futures. More relaxed time out policy.

    [BUG FIXES]
    - Fix for NullPointer exception when hbase key is not present
      in the config file
    - Bug fix for hbase namespace configuration: used to override
      hbase namespace read from config file with a null, if namespace
      was not specified in startup parameters.
    - Force UTC timezone when computing the suffix for daily tables (Philippe Bruhat)
    - Bug fix for noninitialized Kafka message key
    - Fix for NPE in loadActiveSchema method 
    - Workaround for a bug in open replicator which results in
      rotate event having timestamp value = 0. This messes up
      the replication delay time series. The workaround is
      not to calculate the replication delay at rotate event.
    - Fix for a deadlock during shutdown hook execution.

    [REMOVED]
    - Replicator will now exit with error if the producer stops running, instead of
      trying to restart the producer. This is in line with the decission to rely
      on marathon to restart the failed docker apps and to run replicator in 
      docker container.

Release 0.10.0  Date/Time: 2016-07-18

    [NEW FEATURES]
    - Zookeeper High Availability (Rares Mirica)
    - Kafka Applier (Raynald Chung, Rares Mirica)
    - HBase Snapshotter Spark tool (Islam Hassan)

    [ENHANCEMENTS]
    - Metrics refactoring, moved to using codahale metric library
      instead of internal implementation (Rares Mirica, Mikhail Dutikov)
    - Added code style validator (Rares Mirica)
    - File based position tracking (Rares Mirica)

    [MINOR ENHANCEMENTS]
    - Refactored the HBase Applier  (Rares Mirica) 
    - Refactored configuration to use serialization from yml (Rares Mirica)
    - Made AugmentedRow JSON serializable (Rares Mirica)
    - Config file simplification: no lists for mysql hosts, only one host

    [BUG FIXES]
    - Memory leak bug in HBase Applier (Rares Mirica)
    - Fixed OpenReplicator restart failure due to null pointer (Rares Mirica)

Release 0.9.9  Date/Time: 2016-04-22

    [ENHANCEMENTS]
    - Parallelized the mutations generator since that was the CPU bottleneck. Now
      Initial snapshots are order of magnitude faster.

    [MINOR ENHANCEMENTS]
    - Make delta tables config optional
    - Change in the salting algorithim:
        -> instead of first two bytes we use first 4 bytes of md5
        -> instead '-' we use ';' to connect salt with the rest of the key

    [BUG FIXES]
    - Tables created in different timezones are now supported, so default
      timestamp won't be invalid in active_schema timezone
    - Removed the limit for maximum KeyValue size in HBase so put won't brake
      on large blobs
    - Dont create daily yyyymmdd tables if table is not listed in yml config
    - Fix for empty buffer-on-rotate event bug
    - Fixed a bug for counter increment (that would occasionaly be skiped) for
      table-level metrics
    - Fixed a bug with init for table-totals metric which resulted in occasionally
      some metrics being lost witch resulted in checkpoint not being passed
    - Fix bug which identified some DDL statements as commit or begin
    - Fix checkpoint test for case when --delta is off

Release 0.9.8  Date/Time: 2016-04-01

        [ENHANCEMENTS]
        - Added daily changes tables in HBase. Usefull for imports to hive
        - Added table level counters
        - Added check point tests on binlog rotate event
        - Added "Chaos Monkey" which fails HBase Applier tasks in 1% of the cases

        [MINOR ENHANCEMENTS]
        - Added option for end-binlog-file

        [BUG FIXES]
        - Handle OpenReplicator bug that produces two rotate events per one binlog file

Release 0.9.7  Date/Time: 2016-02-26

        [ENHANCEMENTS]
        - Added hbase-applier-tasks metrics
        - Added counter-totals metrics
        - Added initial-snapshot option

        [MINOR ENHANCEMENTS]
        - Refactored hbase applier to prepare structure for future features
        - More debug info added to STDOUT applier
        - Better naming of metrics

        [BUG FIXES]
        - fix for missing rows of the last task of initial snapshot in
          the case when COMMIT query event does not contain database name.
        - fix for NullPointer exception in ReplicatorMetrics.

Release 0.9.6  Date/Time: 2016-02-11

        [ENHANCEMENTS]
        - Added replication delay metric.

        [MINOR ENHANCEMENTS]
        - Renamed Counters.java to Metrics.java since not all of the metrics are Counters.

        [BUG FIXES]
        - Handling utf8 and latin1 for MySQL TEXT types.
        - MySQL BLOB handling: hex-ify and store as hex string in HBase.
        - Timestamp handling: Store timestamp as a long number in HBase,
          instead of its date-time representation in local timezone.

Release 0.9.5  Date/Time: 2016-02-02

        [ENHANCEMENTS]
        - Restructured uuidBufer design, for better performance and adaptability
          to two distinct load patters (many small transactions vs few very large
          transactions).
        - Refactored metrics code. Added additional metrics and clear naming for
          clear distinction between event-level counters and row-level counters
        - For updated rows store only the changed cells.
        - Added operation type markers: 'U' marker for updates, 'I' marker for
          inserts and 'D' marker for deletes. Markers are stored in column 'd:row_status'

        [MINOR ENHANCEMENTS]
        - Better naming for some variables and new constants added
        - shard number can be specified on startup as part of schema name

        [BUG FIXES]
        - Fixed regex for enum column definition parsing
        - handle Time2Column OpenReplicator type in type converter
        - For deleted rows all columns should be ignored (which was not the case).

Release 0.9.4  Date/Time: 2015-12-29

        [INITIAL COMMIT]
        - Open sourcing the code - initial commit of early beta/alpha code base
